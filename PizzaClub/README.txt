üçï PizzaClub Database

Este sistema est√° dise√±ado para gestionar las operaciones de una cadena de pizzer√≠as, con caracter√≠sticas como clientes, empleados, pedidos, productos y sucursales. A continuaci√≥n, encontrar√°s una descripci√≥n detallada de la estructura y funcionamiento de la base de datos.


üéØ Objetivo

Te han contratado para dise√±ar una web que permita hacer pedidos de comida a domicilio por Internet.

Ten en cuenta las siguientes indicaciones para modelar c√≥mo ser√≠a la base de datos del proyecto:
Para cada cliente/a almacenamos un identificador √∫nico:
Nombre.
Apellidos.
Direcci√≥n.
C√≥digo postal.
Localidad.
Provincia.
N√∫mero de tel√©fono.
Los datos de localidad y provincia estar√°n almacenados en tablas separadas. Sabemos que una localidad pertenece a una √∫nica provincia, y que una provincia puede tener muchas localidades. Para cada localidad almacenamos un identificador √∫nico y un nombre. Para cada provincia almacenamos un identificador √∫nico y un nombre.

Una persona puede realizar muchos pedidos, pero un √∫nico pedido s√≥lo puede ser realizado por una √∫nica persona. De cada pedido se almacena un identificador √∫nico:
Fecha/hora.
Si el pedido es para reparto a domicilio o para recoger en tienda.
La cantidad de productos que se han seleccionado de cada tipo.
El precio total.

Un pedido puede constar de uno o varios productos.


Los productos pueden ser pizzas, hamburguesas y bebidas. De cada producto se almacena un identificador √∫nico:
Nombre.
Descripci√≥n.
Imagen.
Precio.

En el caso de las pizzas existen varias categor√≠as que pueden ir cambiando de nombre a lo largo del a√±o. Una pizza solo puede estar dentro de una categor√≠a, pero una categor√≠a puede tener muchas pizzas.


De cada categor√≠a se almacena un identificador √∫nico y un nombre. Un pedido es gestionado por una √∫nica tienda y una tienda puede gestionar muchos pedidos. De cada tienda se almacena un identificador √∫nico:
Direcci√≥n.
C√≥digo postal.
Localidad.
Provincia.


En una tienda pueden trabajar muchos empleados/as y un empleado/a solo puede trabajar en una tienda. De cada empleado/a, se almacena un identificador √∫nico:
Nombre.
Apellidos.
NIF.
Tel√©fono.
Si trabaja como cocinero/a o repartidor/a. Para los pedidos de reparto a domicilio interesa guardar qui√©n es el repartidor/a que hace la entrega del pedido y la fecha/hora del momento de la entrega.


üìÇ Estructura de la Base de Datos

La base de datos de **PizzaClub** est√° compuesta por las siguientes tablas principales:

1. **Clientes (`client`)** üë§  
   Registra informaci√≥n b√°sica de los clientes, incluyendo datos de contacto y ubicaci√≥n.

2. **Empleados (`employees`)** üëî  
   Contiene informaci√≥n del personal, como nombre, rol y sucursal asignada.

3. **Productos (`product`)** üçï  
   Registro de los productos disponibles, incluyendo nombre, tipo, descripci√≥n, precio y categor√≠a.

4. **Pedidos (`order`)** üõçÔ∏è  
   Registro de pedidos realizados, con detalles sobre el cliente, sucursal, empleado asignado, productos y precios.

5. **Detalles de Pedido (`order_details`)** üìÑ  
   Especifica los productos incluidos en cada pedido y sus cantidades.

6. **Sucursales (`store`)** üè¢  
   Informaci√≥n sobre las sucursales, incluyendo ubicaci√≥n y vecindario.

7. **Provincias y Vecindarios (`province`, `vecinity`)** üìç  
   Tablas de referencia para gestionar la localizaci√≥n geogr√°fica de clientes y sucursales.



üõ†Ô∏è Relaciones entre Tablas

La base de datos utiliza claves for√°neas para mantener la integridad de los datos. A continuaci√≥n, se describen las relaciones principales:

- Un **cliente** puede realizar m√∫ltiples **pedidos**.
- Cada **pedido** est√° asociado a un **cliente**, un **empleado**, una **sucursal** y uno o m√°s **productos**.
- Cada **producto** pertenece a una **categor√≠a** y puede estar en m√∫ltiples **pedidos**.
- Una **sucursal** est√° ubicada en un **vecindario**, que a su vez pertenece a una **provincia**.
- Cada **empleado** est√° asignado a una **sucursal** espec√≠fica.



üåü Caracter√≠sticas Destacadas

- **Gesti√≥n Integral:** Permite registrar clientes, empleados, productos, pedidos y sucursales en un solo sistema.
- **Ubicaci√≥n Geogr√°fica:** Uso de provincias y vecindarios para una mejor organizaci√≥n de clientes y sucursales.
- **Detalles Precisos:** Registro detallado de cada pedido, incluyendo productos y cantidades.



üìä Diagrama Relacional

Un ejemplo visual de las relaciones principales:  


[Client] <--> [Order] <--> [Order_Details] <--> [Product]
         |           |
      [Store]      [Employees]
         |
   [Vecinity] <--> [Province]




üõ† Herramientas Utilizadas

- **MySQL Workbench 8.0**: Utilizado para modelar la base de datos y ejecutar consultas.
- **SQL Scripts**: Scripts utilizados para crear y consultar la base de datos de manera eficiente.



üöÄ C√≥mo Usar

1. Instala [MySQL Workbench 8.0](https://dev.mysql.com/downloads/workbench/).
2. Carga los scripts SQL proporcionados para la creaci√≥n de la base de datos.
3. Ejecuta las consultas para validar el dise√±o y explorar las funcionalidades.
